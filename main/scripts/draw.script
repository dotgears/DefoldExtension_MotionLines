local settings = {
	BUFFER_WIDTH = 1024,
	BUFFER_HEIGHT = 1024
}

local motion_lines = require "motion_lines.motionline"

function init(self)
	msg.post(".", "acquire_input_focus")
	self.buffer_info = {
		buffer = buffer.create(settings.BUFFER_WIDTH * settings.BUFFER_HEIGHT, {{name = hash("rgba"), type = buffer.VALUE_TYPE_UINT8, count = 4}}),
		width = settings.BUFFER_WIDTH,
		height = settings.BUFFER_HEIGHT,
		channels = 4 -- 3 for rgb, 4 for rgba
	}

	self.resource_path = go.get("#sprite", "texture0")

	self.header = {
		width = settings.BUFFER_WIDTH,
		height = settings.BUFFER_HEIGHT,
		type = resource.TEXTURE_TYPE_2D,
		format = resource.TEXTURE_FORMAT_RGBA,
		num_mip_maps = 1
	}

	drawpixels.setup(self.buffer_info)
	
	drawpixels.setLineWidth(5)
	drawpixels.setLineColor(255, 255, 255, 128)

end

function final(self)
	drawpixels.destroy()
end

function on_input(self, action_id, action) 

	local point = {
		x = action.x,
		y = action.y
	}

	motion_lines.addPoint(point)
end

function update(self, dt)
	drawpixels.clear(0, 0, 0, 0)

	-- drawpixels.removePath()
	
	motion_lines.update(dt)

-- 	-- drawpixels.star(0,0,50,100,math.pi * 0.5 ,5)
-- 	local xy = { 0, 0, 0, 100, 100, 100 }
-- 	drawpixels.polygon(xy)
-- 
-- 	local xy2 = {}
-- 	for k, v in pairs(xy) do 
-- 		table.insert(xy2, v + 150)
-- 	end
-- 	drawpixels.polyline(xy2)
	
	resource.set_texture(self.resource_path, self.header, self.buffer_info.buffer)
end